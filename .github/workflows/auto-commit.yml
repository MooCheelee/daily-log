name: Daily GitHub Activity

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0 点触发
  workflow_dispatch:

jobs:
  daily-activity:
    runs-on: ubuntu-latest

    steps:
      # 拉取仓库
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      # 模拟拟人作息 + 随机延迟
      - name: Human-like delay
        run: |
          HOUR=$(date +%H)
          # 白天 (8-22点) 延迟短，夜里延迟长
          if [ $HOUR -ge 8 ] && [ $HOUR -le 22 ]; then
            DELAY=$((RANDOM % 1))   # 最多延迟 4 小时
          else
            DELAY=$((RANDOM % 2))   # 最多延迟 8 小时
          fi
          echo "模拟人类作息，等待 $DELAY 秒再执行..."
          sleep $DELAY

          # 周末懒惰模式
          DOW=$(date +%u)
          if [ $DOW -gt 5 ]; then
            RAND=$((RANDOM % 100))
            if [ $RAND -lt 40 ]; then
              echo "## $(date '+%Y-%m-%d')" >> update.md
              echo "🛋️ 周末躺平一天，啥也没干。" >> update.md
              exit 0
            fi
          fi

      # 确保日志文件存在
      - name: Ensure update.md exists
        run: |
          if [ ! -f update.md ]; then
            echo "# Daily Commit Log" > update.md
          fi

      # 开场白
      - name: Write opening log
        run: |
          echo "## $(TZ='Asia/Shanghai' date '+%Y-%m-%d')" >> update.md
          OPENINGS=("🌞 早安，今天也来 GitHub 打个卡！"
                    "📅 新的一天，又是活跃的一天。"
                    "👋 打个招呼：大家好，我来啦~"
                    "✨ 开始今天的 Github 冒险！")
          echo "${OPENINGS[$RANDOM % ${#OPENINGS[@]}]}" >> update.md

      # 清理 7 天前日志
      - name: Clean up logs older than 7 days
        run: |
          find . -name "update.md" -mtime +7 -exec rm -f {} \; || true
          echo "🧹 清理了 7 天前的日志" >> update.md

      # 每日提交
      - name: Append daily log
        run: |
          LOGS=("🌱 随手记下一笔"
                "📝 留个小脚印"
                "📌 打卡一下"
                "🔖 记录今天的点滴")
          MSG=${LOGS[$RANDOM % ${#LOGS[@]}]}
          echo "[$(TZ='Asia/Shanghai' date '+%H:%M:%S')] $MSG" >> update.md

      - name: Commit and push log
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add update.md
          git commit -m "chore: daily log update" || echo "No changes to commit"
          git push origin main

      # 随机创建 Issue
      - name: Randomly create Issue
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          RAND=$((RANDOM % 100))
          if [ $RAND -lt 30 ]; then
            BODY=("🌱 随手开了个 Issue"
                  "✍️ 突然想到点东西，记录一下"
                  "💡 灵感来了，新建个 Issue"
                  "🤔 小问题，写下来看看")
            MSG=${BODY[$RANDOM % ${#BODY[@]}]}
            echo "[$(date '+%H:%M:%S')] $MSG" >> update.md
            gh issue create --title "Daily Issue - $(TZ='Asia/Shanghai' date '+%Y-%m-%d')" \
                            --body "$MSG" \
                            --repo $GITHUB_REPOSITORY
          fi

      # 随机创建 PR
      - name: Randomly create PR
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          RAND=$((RANDOM % 100))
          if [ $RAND -lt 20 ]; then
            BRANCH="daily-pr-$(date '+%Y%m%d%H%M%S')"
            git checkout -b $BRANCH
            echo "[$(date '+%H:%M:%S')] 🚀 来一发 PR" >> update.md
            git add update.md
            git commit -m "chore: daily PR update"
            git push origin $BRANCH
            gh pr create --title "Daily PR - $(TZ='Asia/Shanghai' date '+%Y-%m-%d')" \
                         --body "自动生成的 PR，记录一下 ✨" \
                         --base main \
                         --head $BRANCH \
                         --repo $GITHUB_REPOSITORY
          fi

      # 自动 Review + 合并
      - name: Auto Review and Merge PR
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          TARGET_REPO="${GITHUB_REPOSITORY}"
          PR_LIST=$(gh pr list --state open --repo "$TARGET_REPO" --json number -q '.[].number')
          if [ -n "$PR_LIST" ]; then
            PR_NUM=$(echo "$PR_LIST" | shuf -n1)
            gh pr review "$PR_NUM" --comment --body "🤖 自动审查一下，看起来挺不错！"
            gh pr merge "$PR_NUM" --squash --delete-branch --repo "$TARGET_REPO" --admin
            echo "[$(date '+%H:%M:%S')] ✅ 合并了自己的 PR #$PR_NUM" >> update.md
          fi

      # 随机 star 仓库
      - name: Randomly star repos
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          REPOS=("vercel/next.js" "facebook/react" "microsoft/vscode" "torvalds/linux" "twbs/bootstrap")
          COUNT=$((1 + RANDOM % 2)) # 1~2 个
          for i in $(seq 1 $COUNT); do
            REPO=${REPOS[$RANDOM % ${#REPOS[@]}]}
            gh api user/starred/$REPO -X PUT
            echo "[$(date '+%H:%M:%S')] ⭐ 路过点了个 Star: $REPO" >> update.md
          done
# ✅ 稳妥可运行的旧 branch 清理（mergedAt 判断）
      - name: Clean up old merged branches
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          TARGET_REPO="${GITHUB_REPOSITORY}"
          NOW=$(date +%s)
          gh pr list --state merged --repo "$TARGET_REPO" --json number,headRefName,mergedAt -q '.[]' | while read pr; do
            PR_NUM=$(echo "$pr" | jq -r '.number')
            BRANCH=$(echo "$pr" | jq -r '.headRefName')
            MERGED_AT=$(echo "$pr" | jq -r '.mergedAt')
            MERGED_TS=$(date -u -d "$MERGED_AT" +%s)
            AGE=$(( (NOW - MERGED_TS) / 86400 ))
            if [[ "$BRANCH" == daily-pr-* && $AGE -gt 7 ]]; then
              echo "🗑️ 删除已合并超过 7 天的分支: $BRANCH (PR #$PR_NUM)"
              git push origin --delete "$BRANCH" || true
            fi
          done
          
      # 写总结
      - name: Write summary
        run: |
          LOG_DATE=$(date '+%Y-%m-%d')
          echo "🌙 今日小结：完成了一些提交/Issue/PR/Star ⭐" >> update.md
          git add update.md
          git commit -m "chore: daily summary" || echo "No changes"
          git push origin main

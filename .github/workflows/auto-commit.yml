name: Daily Random GitHub Activity

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0 点触发
  workflow_dispatch:       # 手动触发

jobs:
  daily-activity:
    runs-on: ubuntu-latest

    steps:
      # 拉取 main 分支，避免 detached HEAD
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.GH_TOKEN }}

      # 随机延迟（模拟每天随机时间）
      - name: Wait for random delay
        run: |
          DELAY=$((RANDOM % 1))
          echo "Waiting for $DELAY seconds..."
          sleep $DELAY

      # 确保 update.md 存在
      - name: Ensure update.md exists
        run: |
          if [ ! -f update.md ]; then
            echo "# Daily Commit Log" > update.md
          fi

      # 清理超过 7 天的日志
      - name: Clean up logs older than 7 days
        run: |
          find . -name "update.md" -mtime +7 -exec rm -f {} \; || true
          echo "Cleaned old logs."

      # 每日 Commit
      - name: Append random log
        run: |
          echo "$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S') - 自动提交日志 🌱" >> update.md

      - name: Commit and push log
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add update.md
          git commit -m "chore: daily log update" || echo "No changes to commit"
          git push origin main

      # 随机创建 Issue (30%)
      - name: Randomly create daily issue
        run: |
          RAND=$((RANDOM % 100))
          if [ $RAND -lt 100 ]; then
            echo "生成 Issue"
            gh issue create --title "Daily Issue - $(TZ='Asia/Shanghai' date '+%Y-%m-%d')" \
                            --body "随机生成每日 Issue 🌱" \
                            --repo $GITHUB_REPOSITORY
          else
            echo "今天不生成 Issue"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # 随机创建 PR (30%)
      - name: Randomly create daily PR
        run: |
          RAND=$((RANDOM % 100))
          if [ $RAND -lt 100 ]; then
            BRANCH="daily-pr-$(date '+%Y%m%d%H%M%S')"
            git checkout -b $BRANCH
            echo "$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S') - 自动 PR 日志 🌱" >> update.md
            git add update.md
            git commit -m "chore: daily PR update"
            git push origin $BRANCH
            gh pr create --title "Daily PR - $(TZ='Asia/Shanghai' date '+%Y-%m-%d')" \
                         --body "随机生成每日 PR 🌱" \
                         --base main \
                         --head $BRANCH \
                         --repo $GITHUB_REPOSITORY
          else
            echo "今天不生成 PR"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # 自动合并 PR
      - name: Auto merge first open PR
        run: |
          PR_URL=$(gh pr list --state open --repo $GITHUB_REPOSITORY --json url -q '.[0].url')
          if [ -n "$PR_URL" ]; then
            echo "Merging PR: $PR_URL"
            gh pr merge "$PR_URL" --squash --delete-branch --admin
          else
            echo "No open PR to merge."
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # 随机 Code Review (30%)
      - name: Randomly add code review comment
        run: |
          RAND=$((RANDOM % 100))
          if [ $RAND -lt 100 ]; then
            PR_INFO=$(gh pr list --state open --repo $GITHUB_REPOSITORY --json url,author -q '.[0]')
            PR_URL=$(echo "$PR_INFO" | jq -r '.url')
            PR_AUTHOR=$(echo "$PR_INFO" | jq -r '.author.login')
            CURRENT_USER=$(gh api user -q '.login')

            if [ "$PR_AUTHOR" != "$CURRENT_USER" ] && [ -n "$PR_URL" ]; then
              echo "Reviewing PR: $PR_URL"
              gh pr review "$PR_URL" --approve --body "Looks good! 👍"
            else
              echo "跳过自己创建的 PR 或无可审查的 PR"
            fi
          else
            echo "今天不进行代码审查"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

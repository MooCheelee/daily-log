name: Daily GitHub Activity

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0 点触发一次
  workflow_dispatch:

jobs:
  daily-activity:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      # 随机决定今天执行多少次 (2~8)
      - name: Decide random run count
        id: run_count
        run: |
          COUNT=$(( (RANDOM % 7) + 2 ))  # 2 ~ 8
          echo "今天计划执行 $COUNT 次任务"
          echo "count=$COUNT" >> $GITHUB_OUTPUT

      # 循环执行多次，每次随机延迟 & 随机行为
      - name: Run multiple times
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          for i in $(seq 1 ${{ steps.run_count.outputs.count }}); do
            echo "------ 第 $i 次运行 ------"

            # 随机延迟 30 分钟 ~ 3 小时
            DELAY=$(( (RANDOM % 9) + 18 ))
            echo "等待 $DELAY 秒..."
            sleep $DELAY

            # ==== 必做：提交日志 ====
            echo "$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S') - 自动提交日志 🌱" >> update.md
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add update.md
            git commit -m "chore: daily log update" || echo "No changes to commit"
            git push origin main || true

            # ==== 选择额外的随机行为 ====
            ACTIONS=("issue" "pr" "review" "star")
            COUNT=$(( (RANDOM % 3) + 1 ))  # 本次选择 1~3 个行为
            echo "本次将执行 $COUNT 个额外行为"

            # 随机打乱动作数组
            SHUFFLED=$(printf "%s\n" "${ACTIONS[@]}" | shuf | head -n $COUNT)

            for action in $SHUFFLED; do
              case $action in
                issue)
                  echo "📌 创建 Issue"
                  gh issue create --title "Daily Issue - $(TZ='Asia/Shanghai' date '+%Y-%m-%d')" \
                                  --body "随机生成每日 Issue 🌱" \
                                  --repo $GITHUB_REPOSITORY || true
                  ;;
                pr)
                  echo "🌿 创建 PR"
                  BRANCH="daily-pr-$(date '+%Y%m%d%H%M%S')"
                  git checkout -b $BRANCH
                  echo "$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S') - 自动 PR 日志 🌱" >> update.md
                  git add update.md
                  git commit -m "chore: daily PR update"
                  git push origin $BRANCH
                  gh pr create --title "Daily PR - $(TZ='Asia/Shanghai' date '+%Y-%m-%d')" \
                               --body "随机生成每日 PR 🌱" \
                               --base main \
                               --head $BRANCH \
                               --repo $GITHUB_REPOSITORY || true
                  git checkout main
                  ;;
                review)
                  echo "🔍 自动审查 PR"
                  TARGET_REPO="${GITHUB_REPOSITORY}"
                  PR_LIST=$(gh pr list --state open --repo "$TARGET_REPO" --json number -q '.[].number')
                  if [ -n "$PR_LIST" ]; then
                    PR_NUM=$(echo "$PR_LIST" | shuf -n1)
                    gh pr review "$PR_NUM" --comment --body "🤖 自动审查并评论：看起来不错！" || true
                    gh pr merge "$PR_NUM" --squash --delete-branch --repo "$TARGET_REPO" --admin || true
                  fi
                  ;;
                star)
                  echo "⭐ 随机 Star 仓库"
                  REPOS=$(gh api 'search/repositories?q=stars:>5000&sort=stars&order=desc&per_page=10' --jq '.items[].full_name')
                  COUNT=0
                  for repo in $REPOS; do
                    if [ $((RANDOM % 100)) -lt 40 ]; then
                      gh api --method PUT "user/starred/$repo" || true
                      COUNT=$((COUNT+1))
                      if [ $COUNT -ge 2 ]; then
                        break
                      fi
                    fi
                  done
                  ;;
              esac
            done

            # ==== 定期清理旧分支 ====
            echo "🧹 清理旧分支"
            TARGET_REPO="${GITHUB_REPOSITORY}"
            for branch in $(gh api repos/$TARGET_REPO/branches --paginate --jq '.[].name' | grep '^daily-pr-'); do
              if git branch -r --contains origin/$branch | grep -q "origin/main"; then
                LAST_COMMIT=$(gh api repos/$TARGET_REPO/commits/$branch --jq '.commit.committer.date')
                LAST_COMMIT_TS=$(date -d "$LAST_COMMIT" +%s)
                NOW=$(date +%s)
                AGE=$(( (NOW - LAST_COMMIT_TS) / 86400 ))
                if [ $AGE -gt 7 ]; then
                  git push origin --delete $branch || true
                fi
              fi
            done

            echo "✅ 第 $i 次执行完成"
          done
